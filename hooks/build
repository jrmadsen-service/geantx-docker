#!/bin/bash -e

comment="##############################################################"

run-verbose()
{
    echo -e "\n${comment}\n#\n# --> Running command: '${@}'...\n#\n${comment}\n"
    eval $@
}

run-verbose env
while [ ! -f "${PWD}/Dockerfile" ]; do cd .. ; done
run-verbose echo "PWD: \$(pwd)"
run-verbose find .

if [ "${DOCKER_REPO}" = "geantx/geant4" ]; then
    run-verbose \
        docker build . -t ${IMAGE_NAME} \
        --build-arg BASE_IMG="ubuntu" \
        --build-arg BASE_TAG="latest" \
        --build-arg COMPILER_TYPE="gcc" \
        --build-arg COMPILER_VERSION="7" \
        --build-arg BUILD_TYPE="Release" \
        --build-arg TIMEMORY="ON" \
        --build-arg SOFTWARE="geant4"
elif [ "${DOCKER_REPO}" = "geantx/geantv" ]; then
    run-verbose \
        docker build . -t ${IMAGE_NAME} \
        --build-arg BASE_IMG="ubuntu" \
        --build-arg BASE_TAG="latest" \
        --build-arg COMPILER_TYPE="gcc" \
        --build-arg COMPILER_VERSION="7" \
        --build-arg BUILD_TYPE="Release" \
        --build-arg TIMEMORY="ON" \
        --build-arg SOFTWARE="geantv"
elif [ "${DOCKER_REPO}" = "geantx/geantx-dev" ]; then
    run-verbose \
        docker build . -t ${IMAGE_NAME} \
        --build-arg BASE_IMG="nvidia/cuda" \
        --build-arg BASE_TAG="latest" \
        --build-arg COMPILER_TYPE="gcc" \
        --build-arg COMPILER_VERSION="7" \
        --build-arg BUILD_TYPE="Release" \
        --build-arg TIMEMORY="ON" \
        --build-arg SOFTWARE="geantx-dev"
else
    echo -e "\n${comment}\n#\n# Error: Unknown value for DOCKER_REPO=\"${DOCKER_REPO}\"\n# Exiting...\n#\n${comment}\n"
    exit 1
fi
